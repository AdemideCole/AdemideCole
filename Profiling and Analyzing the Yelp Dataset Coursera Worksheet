Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = business_id : 6493
viii. Tip = user_id : 537
ix. User = 10000
x. Friend = user_id : 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer: 
SELECT *
FROM User
WHERE id IS NULL OR name IS NULL OR review_count IS NULL OR yelping_since IS NULL
OR useful IS NULL OR funny IS NULL OR cool IS NULL or fans IS NULL or average_stars IS NULL 
OR compliment_hot IS NULL OR Compliment_more IS NULL OR compliment_profile IS NULL OR 
Compliment_cute IS NULL OR compliment_list IS NULL OR Compliment_note IS NULL OR
compliment_plain IS NULL OR compliment_cool IS NULL OR Compliment_funny IS NULL OR 
compliment_writer IS NULL OR Compliment_photos IS NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7802
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.0	max:	5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:
| Las Vegas                   
| Phoenix                      
| Toronto                      
| Scottsdale                   
| Charlotte                    
| Henderson                    
| Tempe                        
| Pittsburgh                    
| Montréal                      
| Chandler                      
| Mesa                          
| Gilbert 
|Cleveland                                        
| Madison                       
| Glendale                      
| Mississauga                   
| Edinburgh                     
| Peoria                        
| North Las Vegas               
| Markham                       
| Champaign                     
| Stuttgart                     
| Surprise                      
| Lakewood                    
| Goodyear                     

	SQL code used to arrive at answer:
SELECT city,SUM(review_count)
FROM business
GROUP BY city 
ORDER BY SUM(review_count) DESC
	
	
	Copy and Paste the Result Below:
+-----------------+-------------------+
| city            | SUM(review_count) |
+-----------------+-------------------+
| Las Vegas       |             82854 |
| Phoenix         |             34503 |
| Toronto         |             24113 |
| Scottsdale      |             20614 |
| Charlotte       |             12523 |
| Henderson       |             10871 |
| Tempe           |             10504 |
| Pittsburgh      |              9798 |
| Montréal        |              9448 |
| Chandler        |              8112 |
| Mesa            |              6875 |
| Gilbert         |              6380 |
| Cleveland       |              5593 |
| Madison         |              5265 |
| Glendale        |              4406 |
| Mississauga     |              3814 |
| Edinburgh       |              2792 |
| Peoria          |              2624 |
| North Las Vegas |              2438 |
| Markham         |              2352 |
| Champaign       |              2029 |
| Stuttgart       |              1849 |
| Surprise        |              1520 |
| Lakewood        |              1465 |
| Goodyear        |              1155 |
+-----------------+-------------------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT stars AS star_rating,COUNT(stars) as COUNT
FROM business
WHERE CITY = 'Avon'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------------+-------+
| star_rating | COUNT |
+-------------+-------+
|         1.5 |     1 |
|         2.5 |     2 |
|         3.5 |     3 |
|         4.0 |     2 |
|         4.5 |     1 |
|         5.0 |     1 |
+-------------+-------+


ii. Beachwood

SQL code used to arrive at answer:
SELECT stars AS star_rating,COUNT(stars) as COUNT
FROM business
WHERE CITY = 'Beachwood'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------------+-------+
| star_rating | COUNT |
+-------------+-------+
|         2.0 |     1 |
|         2.5 |     1 |
|         3.0 |     2 |
|         3.5 |     2 |
|         4.0 |     1 |
|         4.5 |     2 |
|         5.0 |     5 |
+-------------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	SELECT name, review_count
        FROM user
        ORDER BY review_count DESC
        Limit 3
	
		
	Copy and Paste the Result Below:
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
YES

My approach was to use the Limit function to pull the number of fans for the users in the top 20 for review count into a table and pull the 
number of fans for the users in the bottom 20 for review count into anothe table.

Usind MAX) AND MIN() functions, I found that users in the top 20 for review count had fans ranging from 37 to 497.
I also found that no user in the bottom 20 for review count had any fan.

My findings point to a correlation betwwen posting more reviews and getting more fans.
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: "LOVE"
 +-----------+-----------+
| love_text | hate_text |
+-----------+-----------+
|      1780 |       232 |
+-----------+-----------+
        

	
	SQL code used to arrive at answer:
SELECT (SELECT count(text)
		from review
		where text like "%love%") as  love_text, 

	        (SELECT count(text) 
		from review
		where text like "%hate%") as hate_text
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
SELECT name,fans
FROM user 
ORDER BY fans DESC
LIMIT 10
		
	
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
   City: Las Vegas   Category:  Shoping
	
i. Do the two groups you chose to analyze have a different distribution of hours?
   
YES, the 2-3 stars group had a significantly larger distribution of hours than the 4-5 stars group.


ii. Do the two groups you chose to analyze have a different number of reviews?
    
YES, all three businesses across the returned results had different results with no direct correlation between stars and review count.
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

NO, each business is in a different post code.

SQL code used for analysis:
SELECT id,city,hours.hours,category.category,review_count,postal_code,
 CASE
	WHEN stars BETWEEN 2 AND 3 THEN '2-3 stars'
	WHEN stars BETWEEN 4 AND 5 THEN '4-5 stars'
END AS star_rating
FROM business
INNER JOIN category 
ON business.id = category.business_id
INNER JOIN Hours 
ON category.business_id = hours.business_id
WHERE city = 'Las Vegas' AND category = 'Shopping'
AND
(stars BETWEEN 2 AND 3 OR
stars BETWEEN 4 AND 5)
ORDER BY category

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: 
    Comparing the Average of review counts, we find that open businesses had a larger average number of reviews than businesses which are closed.
     
         
ii. Difference 2:
       Comparing the Average star rating, we find that open businesses had a slightly larger average star rating than businesses which are closed.

+---------------------+-------------------+-------------------+---------------+---------+
| COUNT(DISTINCT(id)) | AVG(review_count) | SUM(review_count) |    AVG(stars) | is_open |
+---------------------+-------------------+-------------------+---------------+---------+
|                1520 |     23.1980263158 |             35261 | 3.52039473684 |       0 |
|                8480 |     31.7570754717 |            269300 | 3.67900943396 |       1 |
+---------------------+-------------------+-------------------+---------------+---------+

         
        
SQL code used for analysis:

SELECT COUNT(DISTINCT(id)),
AVG(review_count),
SUM(review_count),
AVG(stars),
is_open
FROM business
GROUP BY is_open

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do: Predicting the number of fans a user will have.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

    	The review count, number of fans, average stars and years spents yelping were chosen to try and find patterns that may lead to some correlations that can help us predict the number of 
    fans a user will have. Having grouped the number of fans into four different sections, I compared the average stars and years of yelping with number of fans to try and find a pattern 
    but the finding were quite random, there was no correlation.
	Ithen compared the review count with the number of fans, i queried the dataset to show me only the users with most number of fans and the users with the least number of fans,
     the findings showed a clear correlation, the users with the most reviews had the highest amount of fans.
                           
                  
iii. Output of your finished dataset:
+----------+--------------+------+---------------+------------+--------------------+
| name     | review_count | fans | average_stars | Experience | Popularity         |
+----------+--------------+------+---------------+------------+--------------------+
| Amy      |          609 |  503 |          3.21 |         14 | More than 200 fans |
| Mimi     |          968 |  497 |          4.05 |         10 | More than 200 fans |
| Harald   |         1153 |  311 |           4.4 |          9 | More than 200 fans |
| Gerald   |         2000 |  253 |           3.6 |          9 | More than 200 fans |
| Talia    |           26 |    2 |          3.48 |         11 | 0-50 fans          |
| Benjamin |          111 |    2 |          3.43 |          8 | 0-50 fans          |
| Jonathan |           32 |    2 |          3.38 |         10 | 0-50 fans          |
| Nomadic  |          188 |    2 |           3.1 |         10 | 0-50 fans          |
| Quyen    |           23 |    2 |          3.74 |          8 | 0-50 fans          |
| Natalie  |            4 |    2 |          3.75 |         10 | 0-50 fans          |
| Keem     |           53 |    2 |          3.45 |         12 | 0-50 fans          |
| Nikki    |           23 |    2 |          3.77 |          8 | 0-50 fans          |
| Shark    |           35 |    2 |          2.31 |         11 | 0-50 fans          |
| Amber    |           48 |    2 |           4.0 |          8 | 0-50 fans          |
| Kelly    |            9 |    2 |           2.9 |          7 | 0-50 fans          |
+----------+--------------+------+---------------+------------+--------------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT name,review_count,fans,average_stars
,DATE('now') - yelping_since AS Experience,
CASE
    WHEN fans BETWEEN 0 AND 50 THEN '0-50 fans'
    WHEN fans BETWEEN 51 AND 100 THEN '51-100 fans'
    WHEN fans BETWEEN 100 AND 200 THEN '100-200 fans'
    WHEN fans > 200 THEN 'More than 200 fans'
END AS Popularity
FROM User
WHERE fans BETWEEN 0 AND 2 OR fans > 200
ORDER BY fans DESC
LIMIT 15
